class Solution {
    int size, infected;
    
    public void dfs(int src, boolean[] vis, int[][] graph, int[] initial){
        if(vis[src] == true)return;
        
        vis[src] = true;
        size++;
        if(Arrays.binarySearch(initial, src) >= 0) infected++;
        
        for(int i = 0; i < graph.length; ++i){
            if(graph[src][i] == 1){
                dfs(i, vis, graph, initial);
            }
        }
    }
    
    public int minMalwareSpread(int[][] graph, int[] initial) {
        Arrays.sort(initial);
        
        boolean[] vis = new boolean[graph.length];
        
        int maxSize = 0, ans = initial[0];
        
        for(int src : initial){
            size = infected = 0;
            dfs(src, vis, graph, initial);
            
            if(size > maxSize && infected == 1){
                ans = src;
                maxSize = size;
            }
        }
        
        return ans;
    }
}